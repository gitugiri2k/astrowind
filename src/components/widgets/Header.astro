---
// src/components/widgets/Header.astro

import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import { Icon } from 'astro-icon/components';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';

interface Link {
  text: string;
  href: string;
}

export interface Props {
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { isSticky = true, showToggleTheme = true, showRssFeed = false } = Astro.props;

const links: Array<Link> = [
  { text: 'Home', href: getHomePermalink() },
  { text: 'About Us', href: '/about' },
  { text: 'Services', href: '/services' },
  { text: 'Industries', href: '/industries' },
  { text: 'Technologies', href: '/technologies' },
  { text: 'Pricing', href: '/pricing' },
  { text: 'Careers', href: '/careers' },
  { text: 'Contact', href: '/contact' },
];

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-200 bg-white dark:bg-slate-900 dark:border-slate-800',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 py-3 flex justify-between items-center">
    <!-- Logo -->
    <div class="flex items-center">
      <a class="flex items-center" href={getHomePermalink()}>
        <span class="bg-primary text-white px-2 py-1 rounded text-xl font-bold">AA</span>
        <span class="ml-2 text-xl font-bold text-gray-800 dark:text-white">Cognitech</span>
      </a>
    </div>

    <!-- Mobile menu toggle (no position prop) -->
    <div class="flex items-center md:hidden">
      <ToggleMenu />
    </div>

    <!-- Desktop Navigation -->
    <nav class="items-center w-auto hidden md:flex text-default" aria-label="Main navigation">
      <ul class="flex flex-row text-sm md:text-base font-medium">
        {
          links.map(({ text, href }) => (
            <li>
              <a
                class:list={[
                  'hover:text-primary px-4 py-3 flex items-center',
                  { 'text-primary': href === currentPath },
                ]}
                href={href}
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- Right side: RSS, theme toggle -->
    <div class="hidden md:flex items-center space-x-4">
      {
        showRssFeed && (
          <a href="/rss.xml" aria-label="RSS Feed">
            <Icon name="tabler:rss" class="w-5 h-5" />
          </a>
        )
      }
      {showToggleTheme && <ToggleTheme iconClass="w-5 h-5 md:w-5 md:h-5 md:inline-block" />}
    </div>
  </div>
</header>
